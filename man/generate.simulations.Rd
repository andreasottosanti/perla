% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulations.R
\name{generate.simulations}
\alias{generate.simulations}
\title{Simulate maps using DAGAR}
\usage{
generate.simulations(
  spatial.map,
  K,
  X = NULL,
  d = NULL,
  Sigma = NULL,
  z = NULL,
  range.mu,
  range.Sigma,
  rho,
  prob.null.centroid = 0.5,
  scale.factor.variance = 0.05,
  correct.mean.prob = F,
  plot.map = F
)
}
\arguments{
\item{spatial.map}{A \code{SpatialPolygonsDataFrame} object with the map you want
to simulate from.}

\item{K}{Number of clusters.}

\item{X}{(optional) a data.frame containing some possible covariates. If passed, the matrix of regression coefficients will be generated from a N(0,1) distribution.}

\item{d}{Number of the events that are inducing the clusters.}

\item{Sigma}{Correlation matrix across the events that are inducing the
clusters.}

\item{z}{(optional) a vector giving the clustering labels. If passed, the clusters will not be random generated using the multinomial distribution.}

\item{range.mu}{Range of the uniform distribution used in data generation.}

\item{range.Sigma}{Range of the uniform distribution used to generate the
correlation matrix Sigma.}

\item{rho}{\code{rho} parameter of the DAGAR.}

\item{prob.null.centroid}{Probability of the uniform distribution used in
data generation.}

\item{scale.factor.variance}{Scaling factor for variance-covariance matrix
(default 0.05).}

\item{correct.mean.prob}{Use the stick-breaking formulation of the
multinomial distribution while simulating (default \code{FALSE}).}

\item{plot.map}{Plot the map during the simulation (default \code{FALSE}).}
}
\value{
The function returns the map and the simulated data.
}
\description{
Simulate maps using DAGAR.
}
\examples{
data(west_states_data)

sim1 <- generate.simulations(spatial.map = west_states_data,
K = 3,
d = 10,
Sigma = NULL,
range.mu = 0.5,
range.Sigma = 0.1,
rho = c(0.8, 0.9),
prob.null.centroid = 0.5,
scale.factor.variance = 0.05,
correct.mean.prob = F,
plot.map = T)


sim2 <- generate.simulations(spatial.map = west_states_data,
K = 4,
d = 3,
Sigma = NULL,
range.mu = 1,
rho = c(0.01, 0.455, 0.9),
range.Sigma = 0.2,
prob.null.centroid = 0.5,
scale.factor.variance = 0.07,
correct.mean.prob = F,
plot.map = T)

}
