% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/perla.R
\name{perla}
\alias{perla}
\title{PEnalized Regression with Localities Aggregation (PERLA)}
\usage{
perla(
  y,
  W = NULL,
  K,
  R = 10^4,
  X = NULL,
  prior.rho = "const",
  rho.value = 0.99,
  p.spike = 0.5,
  prior.tau = "const",
  tau.value = 1,
  tau.hyperpar = c(2.1, 3.1),
  tau.tuning = 1,
  mean.penalty = c(1),
  mu0 = NULL,
  Sigma0 = NULL,
  burnin = NULL,
  initialization = NULL
)
}
\arguments{
\item{y}{Input dataset. It can be either of class \code{matrix} or
\code{SpatialPolygonsDataFrame}.}

\item{W}{Adjacency matrix. It is required if \code{y} is of class \code{matrix}. If \code{y} is a \code{SpatialPolygonsDataFrame} object and \code{W} is not specified, then it is set equal to the adjacency matrix
extracted from \code{y}.}

\item{K}{Number of clusters.}

\item{R}{Number of MCMC iterations performed (default \code{10^4}).}

\item{X}{a \code{data.frame} object containing the variables to use as covariates.}

\item{prior.rho}{Type of prior on the \code{rho} parameter of the CAR:
\itemize{
\item If \code{const} (default), then the model assumes a fixed \code{rho.value}.
\item If \code{disc}, then \code{rho} takes a priori value \code{0} with probability \code{p.spike}, and \code{rho.value} with probability \code{1 - p.spike}.
\item If \code{cont}, then \code{rho} is assumed a priori to come from a \code{dbeta(x, 2, 18)} with probability \code{p.spike}, or from a \code{dbeta(x, 18, 2)} with probability \code{1 - p.spike}.
}}

\item{rho.value}{A value for the \code{rho} parameter of the CAR (default is 1).
If \code{prior.rho == 'const'}, then \code{rho.value} remains fixed, otherwise it is used to initialise the MCMC algorithm.}

\item{p.spike}{If \code{prior.rho == 'disc'}, then \code{p.spike}
gives the probability that \code{rho} is a priori equal to \code{0}. If \code{prior.rho == 'cont'}, then \code{p.spike}
gives the probability that \code{rho} is a priori drawn from a \code{dbeta(x, 2, 18)}.}

\item{prior.tau}{Type of prior on the \code{tau} parameter of the CAR.
\itemize{
\item If \code{const} (default), then the model assumes a fixed \code{tau.value}.
\item If \code{conj} or \code{metropolis}, then the parameter is assumed to distribute a priori as an inverse gamma distribution with shape \code{tau.hyperpar[1]} and scale \code{tau.hyperpar[2]}.
If \code{conj}, the update is performed via Gibbs sampling, otherwise it is performed through the Metropolis-Hastings algorithm, generating candidate values from a log-Normal distribution (see \code{tau.tuning}).
}}

\item{tau.value}{A value for the marginal variance parameter of the CAR model (default is 1).
If \code{prior.tau == 'const'}, then \code{tau.value} remains fixed, otherwise it is used to initialise the MCMC algorithm.}

\item{tau.hyperpar}{A vector of length 2 containing the shape and the scale of the inverse gamma distribution used as a prior for \code{tau}.
It is ignored if \code{prior.tau == 'const'}.}

\item{tau.tuning}{A tuning parameter used when \code{prior.tau} is set to \code{'metropolis'}.
The logarithm of a candidate value is drawn from a Gaussian distribution centered in the logarithm of the parameter value at the previous iteration, and with standard deviation \code{tau.tuning}.}

\item{mean.penalty}{A vector specifying the shrinkage factors for the elements of \code{Mu}.
It can include the following elements:
\itemize{
\item \code{1}: applies global shrinkage;
\item \code{"c"}: applies cluster-specific shrinkage;
\item \code{"d"}: applies feature-specific shrinkage;
\item \code{"cd"}: applies cluster-feature-specific shrinkage.
}

If \code{"c"}, \code{"d"}, or \code{"cd"} are used, it is not necessary to include \code{1} in \code{mean.penalty}.
Note that using only \code{"cd"} corresponds to applying the horseshoe prior.
If \code{NULL}, no penalization is applied, and the prior for the cluster mean vectors is a
d-variate Gaussian distribution centered at \code{mu0} with covariance matrix \code{Sigma0}.}

\item{mu0}{Vector with values for \code{mu0} hyperparameter. If NULL (default) the
vector components are set equal to 0.}

\item{Sigma0}{Matrix with values for \code{Sigma0} hyperparameter. If NULL
(default) the matrix components are set equal to 10.}

\item{burnin}{A vector of indices specifying the MCMC draws to discard from the \code{R} iterations.
The resulting chains will have a length of \code{R - length(burnin)}.
If set to \code{NULL}, only the initial values are discarded, and the algorithm
will run for \code{R + 1} iterations.}

\item{initialization}{It can be either an object of class \code{perla} or a list
of starting points. In the last case, each list element must be named after
the parameters to be initialized. Names include \code{Mu}, \code{Prob}, \code{Z}, \code{Sigma}, \code{Rho}.}
}
\value{
An object of class \code{perla}.
}
\description{
This function estimates a PERLA model using the Markov Chain Monte Carlo
algorithm. PERLA is a multivariate Bayesian model that clusters the areas in
a territory according to the observed mortality rates of multiple causes of
deaths, exploiting also the information of external covariates.
}
\details{
PERLA incorporates the spatial structure of the data directly into the
clustering probabilities by leveraging the stick-breaking formulation of the
multinomial distribution. Additionally, it exploits suitable global-local
shrinkage priors to ensure that the detection of clusters is driven by
concrete differences across mortality levels, while excluding spurious
differences. PERLA is estimated with an MCMC algorithm for posterior
inference that consists of closed-form Gibbs sampling moves for nearly every
model parameter, without requiring complex tuning operations.

The model parameters and the clustering labels are initialised at random.
}
\examples{
\dontrun{
# running Perla without shrinkage parameters
perla(y = west_states_data, W = west_states_W, K = 3)

# running Perla with only the global shrinkage parameter
perla(y = west_states_data, W = west_states_W, K = 3, mean.penalty = c(1))

# running Perla with the global shrinkage parameter and the cluster-specific shrinkage parameters
perla(y = west_states_data, W = west_states_W, K = 3, mean.penalty = c("c"))
}

}
